filter {
  if [type] == "hp_syslog" {
    grok {
      match => { "message" => "<%{POSINT:syslog_pri}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
      add_field => [ "received_at", "%{@timestamp}" ]
#      add_field => [ "received_from", "%{host}" ]
    }
  syslog_pri { }
    kv {
      source => "syslog_message"
      field_split => "; "
      }
    mutate {
      split => { "syslog_message" => ";" }
    }
     mutate {
            rename => [
                    "[syslog_message][0]", "event",
                    "[syslog_message][1]", "name"
            ]
            remove_field => "[syslog_message][0]"
            remove_field => "syslog_message"
    }
    if [event] =~ /Security/ {
   mutate {
     split => { "event" => ": " }
     }
   mutate {
           remove_field => "[event][0]"
           rename => [
                    "[event][1]", "event_security"
          ]
   }
}
   mutate {
     remove_field => [ "message" ]
}
#    if [syslog_severity] == "Very Low" {
#       mutate {
#         replace => { "syslog_severity" => "very_low" }
#    }
#}
#   mutate {
#     lowercase => [ "syslog_severity" ]
#   }
    if [outcome] == "success" {
      translate {
        field => "event"
        destination => "syslog_severity"
        override => true
        fallback => "no match"
        dictionary_path => "/etc/logstash/hp_patterns_success.yml"
                 }
    }
    date {
      match => [ "syslog_timestamp", "MMM d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
  }
}
